# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.13

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/tasit-sdk

    steps:
      - checkout

      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-
            - v1-{{ checksum "package.json" }}
            - v1-{{ checksum "packages/tasit-account/package.json" }}
            - v1-{{ checksum "packages/tasit-action/src/TasitAction.js" }}
            - v1-{{ checksum "packages/tasit-action/src/TasitAction.test.js" }}
            - v1-{{ checksum "packages/tasit-sdk/package.json" }}
            - v1-{{ checksum "packages/tasit-contracts/package.json" }}
            - v1-{{ checksum "packages/tasit-sdk/package.json" }}
          # fallback to using the latest cache if no exact match is found
          #- dependency-cache-

      # Note: test script do bootstrap already
      #
      #  - run:
      #      name: install-npm-packages
      #      command: npm run bootstrap

      - save_cache:
          paths:
            - ./node_modules
          keys:
            - v1-
            - v1-{{ checksum "package.json" }}
            - v1-{{ checksum "packages/tasit-account/package.json" }}
            - v1-{{ checksum "packages/tasit-action/src/TasitAction.js" }}
            - v1-{{ checksum "packages/tasit-action/src/TasitAction.test.js" }}
            - v1-{{ checksum "packages/tasit-sdk/package.json" }}
            - v1-{{ checksum "packages/tasit-contracts/package.json" }}
            - v1-{{ checksum "packages/tasit-sdk/package.json" }}

      # run tests!
      - run:
          name: test
          command: npm test

      - store_artifacts:
          path: test-results.xml
          prefix: tests

      - store_test_results:
          path: test-results.xml
